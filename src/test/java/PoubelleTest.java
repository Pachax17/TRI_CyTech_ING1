import modele.*;

import java.util.Date;

public class PoubelleTest {
    public static void main(String[] args) {

        System.out.println("ğŸš€ DÃ©but des tests de la classe PoubelleIntelligente...");

        // CrÃ©ation d'une poubelle intelligente
        PoubelleIntelligente poubelle = new PoubelleIntelligente(101, 50, TypePoubelle.BLEUE, 48.8566, 2.3522);

        // CrÃ©ation d'un mÃ©nage
        Menage menage = new Menage(1, "Dupont", "ABC123");

        // CrÃ©ation d'un dÃ©pÃ´t de dÃ©chets
        Depot depot = new Depot(101, new Date(), TypeDechets.PLASTIQUE, 5);

        // ğŸ”¹ Test 1 : Identifier un mÃ©nage
        System.out.println("\nğŸ”¹ Test 1 : Identifier un mÃ©nage...");
        poubelle.identifierMenage(menage);
        System.out.println("âœ… MÃ©nage identifiÃ© : " + poubelle.getIdMenage().getNom());

        // ğŸ”¹ Test 2 : VÃ©rifier la contrainte de dÃ©chets
        System.out.println("\nğŸ”¹ Test 2 : VÃ©rifier la contrainte de dÃ©chets...");
        boolean contrainteRespectee = poubelle.verifierContrainteDechets(depot);
        System.out.println("Contrainte respectÃ©e ? " + contrainteRespectee);

        // ğŸ”¹ Test 3 : Calculer la quantitÃ© de dÃ©chets
        System.out.println("\nğŸ”¹ Test 3 : Calculer la quantitÃ© de dÃ©chets...");
        int quantiteDechets = poubelle.calculerQuantiteDechet(depot);
        System.out.println("QuantitÃ© de dÃ©chets calculÃ©e : " + quantiteDechets);

        // ğŸ”¹ Test 4 : Attribuer des points de fidÃ©litÃ©
        System.out.println("\nğŸ”¹ Test 4 : Attribuer des points de fidÃ©litÃ©...");
        poubelle.attribuerPointsFidelite(menage, 10);
        System.out.println("Points de fidÃ©litÃ© attribuÃ©s : " + menage.consulterPointsFidelite());

        // ğŸ”¹ Test 5 : VÃ©rifier si la poubelle est pleine
        System.out.println("\nğŸ”¹ Test 5 : VÃ©rifier si la poubelle est pleine...");
        boolean estPleine = poubelle.estPleine();
        System.out.println("La poubelle est pleine ? " + estPleine);

        // ğŸ”¹ Test 6 : Vider la poubelle
        System.out.println("\nğŸ”¹ Test 6 : Vider la poubelle...");
        poubelle.viderPoubelle();
        System.out.println("âœ… Poubelle vidÃ©e. Contenu actuel : " + poubelle.getContenu());

        System.out.println("\nâœ… Fin des tests.");

        // CrÃ©ation d'une poubelle intelligente
         poubelle = new PoubelleIntelligente(1, 100, TypePoubelle.JAUNE, 48.85, 2.35);
        System.out.println("âœ… Poubelle crÃ©Ã©e avec ID : " + poubelle.getId());

        // VÃ©rification des getters
        System.out.println("CapacitÃ© max : " + poubelle.getCapaciteMaximale());
        System.out.println("Type : " + poubelle.getTypePoubelle());
        System.out.println("Position : (" + poubelle.getLatitude() + ", " + poubelle.getLongitude() + ")");

        // CrÃ©ation d'un mÃ©nage
         menage = new Menage(10, "Famille Martin", "XYZ123");
        poubelle.identifierMenage(menage);
        System.out.println("MÃ©nage identifiÃ© : " + poubelle.getIdMenage().getNom());

        // CrÃ©ation dâ€™un dÃ©pÃ´t conforme
        TypeDechets plastique = TypeDechets.PLASTIQUE; // doit correspondre Ã  JAUNE
        Depot depotConforme = new Depot(poubelle.getId(), new Date(), plastique, 12);
        boolean estConforme = poubelle.verifierConformite(depotConforme);
        System.out.println("âœ… VÃ©rification conformitÃ© (attendu: true) : " + estConforme);

        // Calcul du poids du dÃ©pÃ´t
        int poids = poubelle.calculerQuantiteDechet(depotConforme);
        System.out.println("Poids du dÃ©pÃ´t : " + poids + "kg");

        // Attribution de points
        int pointsAttribues = 8;
        poubelle.attribuerPointsFidelite(menage, pointsAttribues);
        System.out.println("Points fidÃ©litÃ© aprÃ¨s attribution : " + menage.consulterPointsFidelite());

        // CrÃ©ation et notification dâ€™un centre de tri
        CentreDeTri centre = new CentreDeTri("Centre Ouest", "6 rue de Mars", 48, 45.2, 36, 50);
        poubelle.notifierCentreTri(centre);

    }
}
